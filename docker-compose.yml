services:

  db:
    container_name: db
    image: postgres
    restart: always
    ports:
      - ${POSTGRES_LOCAL_PORT}:${POSTGRES_PORT}
    user: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", '${POSTGRES_DB}' ]
      interval: 5s
      timeout: 3s
      retries: 5
  
  db-migrator:
    container_name: db-migrator
    build:
      dockerfile: src/DBMigrator/Dockerfile
    environment:
      ConnectionStrings__DefaultConnection: Host=db;Port=${POSTGRES_PORT};Username=postgres;Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
       
  rabbit:
    container_name: broker
    image: masstransit/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 5s
      timeout: 3s
      retries: 5
      
  consumer:
    container_name: consumer
    build:
      context: .
      dockerfile: src/ConsumerWebHost/Dockerfile
    environment:
      ConnectionStrings__DefaultConnection: Host=db;Port=${POSTGRES_PORT};Username=postgres;Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}
      Rabbit__Host: rabbit
      Rabbit__Username: ${RABBIT_USERNAME}
      Rabbit__Password: ${RABBIT_PASSWORD}
    depends_on:
      rabbit:
        condition: service_healthy
      db-migrator:
        condition: service_completed_successfully
  
  web-api:
    container_name: web-api
    build:
      context: .
      dockerfile: src/WebApi/Dockerfile
    environment:
      ConnectionStrings__DefaultConnection: Host=db;Port=${POSTGRES_PORT};Username=postgres;Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}
      Rabbit__Host: rabbit
      Rabbit__Username: ${RABBIT_USERNAME}
      Rabbit__Password: ${RABBIT_PASSWORD}
      Frontend__Url: ${FRONTEND}
    ports:
      - ${API_HTTP_PORT}:80
    depends_on:
      rabbit:
        condition: service_healthy
      db-migrator:
        condition: service_completed_successfully
        
#  spa-client:
#    container_name: 'spa-client'
#    build:
#      context: ./src/spa-client
#      dockerfile: Dockerfile
#    ports:
#      - ${SPA_HTTP_PORT}:80